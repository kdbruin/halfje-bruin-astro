---
//
// Paginated posts for a specific tag
//

import type { Page } from 'astro'
import { CollectionEntry, getCollection } from 'astro:content'
import Paginator from '../../../components/Paginator.astro'
import PostPreviewList from '../../../components/PostPreviewList.astro'
import { PAGE_SIZE } from '../../../config'
import DefaultPageLayout from '../../../layouts/default.astro'
import { getTags, matchTag, sortPostsDescending } from '../../../utils'

export async function getStaticPaths({ paginate }) {
    const allPosts = await getCollection('blog')
    const allTags = getTags(allPosts)

    return allTags.flatMap((tag) => {
        const filteredPosts = allPosts.filter((post) => matchTag(post, tag))
        return paginate(sortPostsDescending(filteredPosts), {
            params: { tag },
            pageSize: PAGE_SIZE,
        })
    })
}

interface Params {
    tag: string
}

interface Props {
    page: Page<CollectionEntry<'blog'>>
}

const { page } = Astro.props as Props
const { tag } = Astro.params as Params
---

<DefaultPageLayout
    content={{
        title: `Tag: ${tag}`,
        description: `alle berichten met de tag: ${tag}`,
    }}
>
    <PostPreviewList posts={page.data} />
    <Paginator page={page} />
</DefaultPageLayout>
