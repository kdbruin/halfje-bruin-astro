---
//
// Paginated posts for a single series
//

import { InferGetStaticParamsType, InferGetStaticPropsType, Page } from 'astro'
import { CollectionEntry, getCollection } from 'astro:content'
import Paginator from '../../../components/Paginator.astro'
import PostPreviewList from '../../../components/PostPreviewList.astro'
import { PAGE_SIZE } from '../../../config'
import DefaultPageLayout from '../../../layouts/default.astro'
import { sortPostsDescending } from '../../../utils'

export async function getStaticPaths({ paginate }) {
    const allPosts = await getCollection('blog')
    const allSeries = await getCollection('series')

    return allSeries.flatMap((series) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.series?.slug === series.slug
        )
        return paginate(sortPostsDescending(filteredPosts), {
            params: { series: series.slug },
            props: { series },
            pageSize: PAGE_SIZE,
        })
    })
}

interface Props {
    page: Page<CollectionEntry<'blog'>>,
    series: CollectionEntry<'series'>
}

const { page, series } = Astro.props
---

<DefaultPageLayout
    content={{
        title: `${series.data.title}`,
        description: `alle berichten uit de serie: ${series.data.title}`,
    }}
>
    <PostPreviewList posts={page.data} />
    <Paginator page={page} />
</DefaultPageLayout>
