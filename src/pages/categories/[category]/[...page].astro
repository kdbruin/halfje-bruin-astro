---
//
// Paginated posts for a specific category
//

import type { InferGetStaticParamsType, InferGetStaticPropsType } from 'astro'
import { getCollection } from 'astro:content'
import Paginator from '../../../components/Paginator.astro'
import PostPreviewList from '../../../components/PostPreviewList.astro'
import { PAGE_SIZE } from '../../../config'
import DefaultPageLayout from '../../../layouts/default.astro'
import { getCategories, sortPostsDescending } from '../../../utils'

export async function getStaticPaths({ paginate }) {
    const allPosts = await getCollection('blog')
    const allCategories = getCategories(allPosts)

    return allCategories.flatMap((category) => {
        const filteredPosts = allPosts.filter(
            (post) => post.data.category === category
        )
        return paginate(sortPostsDescending(filteredPosts), {
            params: { category },
            pageSize: PAGE_SIZE,
        })
    })
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>
type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { page } = Astro.props as Props
const { category } = Astro.params as Params
---

<DefaultPageLayout
    content={{
        title: `Berichten in de categorie: ${category}`,
        description: `alle berichten in de categorie: ${category}`,
    }}
>
    <PostPreviewList posts={page.data} />
    <Paginator page={page} />
</DefaultPageLayout>
