---

interface Props {
    firstLetter: string
    tags: Map<string, number>
    asCard?: boolean
}

const { firstLetter, tags, asCard = false } = Astro.props

const sortedTags = new Map([...tags.entries()].sort())
---
<div class={`tag-list ${asCard && 'tag-list--card'}`}>
    <div class="tag-list__letter-box">
        <div class="tag-list__letter">
            <span class="tag-list__letter-char">{firstLetter}</span>
        </div>
    </div>
    <div class="flex-1">
        <ul class="tag-list__list">
        {
            Array.from(sortedTags.keys()).map((tag) => (
            <li>
                    <a
                        class="tag-list__list-tag"
                        href={`/tags/${tag}`}
                        title={`Toon berichten getagged met "${tag}"`}
                        transition:animate="slide"
                    >
                        {tag} ({tags?.get(tag)})
                    </a>
                </li>
            ))
        }
        </ul>
    </div>
</div>
<style>
    .tag-list {
        @apply flex mb-4;
    }
    .tag-list--card {
        @apply flex flex-col-reverse gap-4 sm:w-72 md:w-60 lg:w-64;
    }
    .tag-list__letter-box {
        @apply sm:w-10 md:w-24;
    }
    .tag-list--card .tag-list__letter-box {
        @apply w-full;
    }
    .tag-list__letter {
        @apply flex w-full justify-center;
    }
    .tag-list--card .tag-list__letter {
        @apply flex gap-1;
    }
    .tag-list__letter-char {
        @apply text-4xl font-semibold text-gray-500 dark:text-gray-300 uppercase;
    }
    .tag-list--card .tag-list__letter-char {
        @apply text-2xl uppercase;
    }
    .tag-list__list {
        @apply list-none flex gap-2 flex-wrap;
    }
    .tag-list__list-tag {
        @apply inline-block text-xl px-4 py-1 hover:text-theme-primary dark:hover:text-theme-dark-primary;
    }
</style>
